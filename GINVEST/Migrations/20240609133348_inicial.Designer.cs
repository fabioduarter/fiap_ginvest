// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GINVEST.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240609133348_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Domain.Auth.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("GINVEST.Domain.Business.Transacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AtivoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataTransacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PortifolioId")
                        .HasColumnType("int");

                    b.Property<float>("Preco")
                        .HasColumnType("float");

                    b.Property<float>("Quantidade")
                        .HasColumnType("float");

                    b.Property<int>("TipoTransacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AtivoId");

                    b.HasIndex("PortifolioId");

                    b.ToTable("Transacao");
                });

            modelBuilder.Entity("GINVEST.Domain.Bussines.Ativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("PortifolioId")
                        .HasColumnType("int");

                    b.Property<int>("TipoAtivo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PortifolioId");

                    b.ToTable("ativo", (string)null);
                });

            modelBuilder.Entity("GINVEST.Domain.Bussines.Portifolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nome");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("portifolio", (string)null);
                });

            modelBuilder.Entity("GINVEST.Domain.Business.Transacao", b =>
                {
                    b.HasOne("GINVEST.Domain.Bussines.Ativo", "Ativo")
                        .WithMany("Transacoes")
                        .HasForeignKey("AtivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GINVEST.Domain.Bussines.Portifolio", "Portifolio")
                        .WithMany()
                        .HasForeignKey("PortifolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ativo");

                    b.Navigation("Portifolio");
                });

            modelBuilder.Entity("GINVEST.Domain.Bussines.Ativo", b =>
                {
                    b.HasOne("GINVEST.Domain.Bussines.Portifolio", null)
                        .WithMany("Ativos")
                        .HasForeignKey("PortifolioId");
                });

            modelBuilder.Entity("GINVEST.Domain.Bussines.Portifolio", b =>
                {
                    b.HasOne("Domain.Auth.Usuario", "Usuario")
                        .WithMany("Portifolios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Auth.Usuario", b =>
                {
                    b.Navigation("Portifolios");
                });

            modelBuilder.Entity("GINVEST.Domain.Bussines.Ativo", b =>
                {
                    b.Navigation("Transacoes");
                });

            modelBuilder.Entity("GINVEST.Domain.Bussines.Portifolio", b =>
                {
                    b.Navigation("Ativos");
                });
#pragma warning restore 612, 618
        }
    }
}
